version: "3.9"

# PROD stack: Postgres + API blue/green (two instances). Host ports 5434 (db) and 5002 (api).
services:
  db:
    image: postgres:16
    container_name: fintech_prod_db
    restart: unless-stopped
    env_file:
      - .env.prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-bankdb}
      POSTGRES_USER: ${POSTGRES_USER:-bankuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-bankpass}
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - prod_pgdata:/var/lib/postgresql/data

  api_blue:
    image: ${IMAGE_NAME:-ghcr.io/example-org/fintech-test/bank-api}:${IMAGE_TAG:-latest}
    build:
      context: ../app_bank
      dockerfile: Dockerfile
    container_name: fintech_prod_api_blue
    restart: unless-stopped
    env_file:
      - .env.prod
    environment:
      FLASK_ENV: production
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5002:5000"  # Only one of blue/green should publish the host port 5002 at a time
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request,sys;\ntry:\n  urllib.request.urlopen('http://localhost:5000/health', timeout=3)\n  sys.exit(0)\nexcept Exception:\n  sys.exit(1)\" "]
      interval: 5s
      timeout: 3s
      retries: 30
    profiles: [blue]

  api_green:
    image: ${IMAGE_NAME:-ghcr.io/example-org/fintech-test/bank-api}:${IMAGE_TAG:-latest}
    build:
      context: ../app_bank
      dockerfile: Dockerfile
    container_name: fintech_prod_api_green
    restart: unless-stopped
    env_file:
      - .env.prod
    environment:
      FLASK_ENV: production
    depends_on:
      db:
        condition: service_healthy
    # Will expose 5002 when active (blue service must be stopped first to avoid conflicts)
    ports:
      - "5002:5000"
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request,sys;\ntry:\n  urllib.request.urlopen('http://localhost:5000/health', timeout=3)\n  sys.exit(0)\nexcept Exception:\n  sys.exit(1)\" "]
      interval: 5s
      timeout: 3s
      retries: 30
    profiles: [green]

volumes:
  prod_pgdata:
    name: fintech_prod_pgdata
