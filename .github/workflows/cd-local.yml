name: CD Local (UAT & Prod)
# Note: This workflow targets ANY self-hosted runner.
# If you prefer restricting to labeled runners, change runs-on to:
#   runs-on: [self-hosted, local]   # for a runner labeled "local"
#   runs-on: [self-hosted, wsl]     # for a runner labeled "wsl"

on:
  workflow_dispatch:
    inputs:
      action:
        description: "What to run: deploy or rollback"
        required: true
        default: deploy
        type: choice
        options: [deploy, rollback]
      mode:
        description: "Deployment mode (image=pull from GHCR, build=local)"
        required: true
        default: image
        type: choice
        options: [image, build]
      image_name:
        description: "Container image name (when mode=image)"
        required: false
        default: ghcr.io/example-org/fintech-test/bank-api
      image_tag:
        description: "Image tag to deploy (e.g., staging or sha)"
        required: false
        default: staging
      run_smoke:
        description: "Run k6 smoke test after deploy"
        required: true
        default: true
        type: boolean
      prune_uat:
        description: "Prune UAT DB volume before deploy (apply schema changes)"
        required: false
        default: false
        type: boolean
      target:
        description: "Target for rollback (uat or prod). Used only when action=rollback"
        required: false
        default: uat
        type: choice
        options: [uat, prod]
      image_tag_previous:
        description: "Previous image tag/SHA for rollback (required when action=rollback)"
        required: false
        default: ""
  push:
    branches:
      - main
    tags:
      - 'v*'

env: {}

permissions:
  contents: read
  packages: read

jobs:
  setup-runner-check:
    name: Check self-hosted runner
    runs-on: self-hosted
    steps:
      - name: Print Docker & Compose version
        run: |
          docker version
          docker compose version

  deploy-uat:
    name: Deploy to UAT (local)
    needs: setup-runner-check
    runs-on: self-hosted
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && inputs.action == 'deploy') }}
    steps:
      - uses: actions/checkout@v4
      - name: Set deployment variables (UAT)
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "MODE=${{ inputs.mode }}" >> $GITHUB_ENV
            echo "IMAGE_NAME=${{ inputs.image_name }}" >> $GITHUB_ENV
            echo "IMAGE_TAG=${{ inputs.image_tag }}" >> $GITHUB_ENV
            echo "RUN_SMOKE=${{ inputs.run_smoke }}" >> $GITHUB_ENV
            echo "PRUNE_UAT=${{ inputs.prune_uat }}" >> $GITHUB_ENV
          else
            echo "MODE=image" >> $GITHUB_ENV
            echo "IMAGE_NAME=ghcr.io/example-org/fintech-test/bank-api" >> $GITHUB_ENV
            echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV
            echo "RUN_SMOKE=true" >> $GITHUB_ENV
            echo "PRUNE_UAT=false" >> $GITHUB_ENV
          fi
      - name: GHCR login (only when MODE=image)
        shell: bash
        run: |
          if [ "$MODE" = "image" ]; then
            echo ${{ github.token }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          else
            echo "MODE=$MODE, skipping GHCR login"
          fi
      - name: Ensure scripts are executable
        run: chmod +x scripts/*.sh || true
        shell: bash
      - name: Prepare UAT env file (.env.uat)
        shell: bash
        run: |
          if [ ! -f docker/.env.uat ]; then
            cp docker/.env.uat.example docker/.env.uat
            key=$(head -c 16 /dev/urandom | od -An -tx1 | tr -d ' \n')
            sed -i.bak "s/^SECRET_KEY=.*/SECRET_KEY=${key}/" docker/.env.uat && rm -f docker/.env.uat.bak
          fi
      - name: Deploy UAT
        shell: bash
        run: |
          bash scripts/deploy_blue_green_local.sh TARGET=uat MODE=$MODE IMAGE_NAME=$IMAGE_NAME IMAGE_TAG=$IMAGE_TAG RUN_SMOKE=$RUN_SMOKE PRUNE_UAT=$PRUNE_UAT

  approval:
    name: Approval for Prod
    needs: deploy-uat
    runs-on: self-hosted
    if: ${{ (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) || (github.event_name == 'workflow_dispatch' && inputs.action == 'deploy') }}
    environment:
      name: production
    steps:
      - name: Await manual approval in Environment gate
        run: echo "Approve in the Production environment gate to continue"

  deploy-prod:
    name: Deploy to PROD (local, blue/green)
    needs: approval
    runs-on: self-hosted
    if: ${{ (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) || (github.event_name == 'workflow_dispatch' && inputs.action == 'deploy') }}
    steps:
      - uses: actions/checkout@v4
      - name: Set deployment variables (PROD)
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "MODE=${{ inputs.mode }}" >> $GITHUB_ENV
            echo "IMAGE_NAME=${{ inputs.image_name }}" >> $GITHUB_ENV
            # if image_tag empty, fallback to sha
            if [ -n "${{ inputs.image_tag }}" ]; then
              echo "IMAGE_TAG=${{ inputs.image_tag }}" >> $GITHUB_ENV
            else
              echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV
            fi
            echo "RUN_SMOKE=${{ inputs.run_smoke }}" >> $GITHUB_ENV
          else
            # Tags v* -> use tag name as IMAGE_TAG
            echo "MODE=image" >> $GITHUB_ENV
            echo "IMAGE_NAME=ghcr.io/example-org/fintech-test/bank-api" >> $GITHUB_ENV
            echo "IMAGE_TAG=${{ github.ref_name }}" >> $GITHUB_ENV
            echo "RUN_SMOKE=true" >> $GITHUB_ENV
          fi
      - name: GHCR login (only when MODE=image)
        shell: bash
        run: |
          if [ "$MODE" = "image" ]; then
            echo ${{ github.token }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          else
            echo "MODE=$MODE, skipping GHCR login"
          fi
      - name: Ensure scripts are executable
        run: chmod +x scripts/*.sh || true
        shell: bash
      - name: Prepare PROD env file (.env.prod)
        shell: bash
        run: |
          if [ ! -f docker/.env.prod ]; then
            cp docker/.env.prod.example docker/.env.prod
            key=$(head -c 16 /dev/urandom | od -An -tx1 | tr -d ' \n')
            sed -i.bak "s/^SECRET_KEY=.*/SECRET_KEY=${key}/" docker/.env.prod && rm -f docker/.env.prod.bak
          fi
      - name: Deploy PROD (blue/green)
        shell: bash
        run: |
          bash scripts/deploy_blue_green_local.sh TARGET=prod MODE=$MODE IMAGE_NAME=$IMAGE_NAME IMAGE_TAG=$IMAGE_TAG RUN_SMOKE=$RUN_SMOKE

  rollback:
    name: Rollback (manual)
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.action == 'rollback' && inputs.image_tag_previous != '' }}
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: GHCR login (optional)
        run: echo ${{ github.token }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin || true
      - name: Ensure scripts are executable
        run: chmod +x scripts/*.sh || true
        shell: bash
      - name: Rollback deploy
        shell: bash
        run: |
          if [ "${{ inputs.target }}" = "uat" ]; then
            bash scripts/deploy_blue_green_local.sh TARGET=uat MODE=image IMAGE_TAG='${{ inputs.image_tag_previous }}'
          else
            bash scripts/deploy_blue_green_local.sh TARGET=prod MODE=image IMAGE_TAG='${{ inputs.image_tag_previous }}'
          fi
